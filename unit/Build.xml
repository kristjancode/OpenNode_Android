<project name="OpenNode_Android_Unit" default="compile" basedir=".">
	<description>
		opennode android core test build file
	</description>
	
	<property name="src" location="${basedir}/src"/>
	<property name="core" location="../src/core/"/>
	<property name="origsrc" location="../src/"/>
	<property name="external" location="../src/external"/>
	<property name="libs" location="${basedir}/libs/"/>
	<property name="build" location="${basedir}/build"/>
	<property name="reports" location="${basedir}/reports"/>
	<property name="coverage" location="${reports}/coverage" />
	<property name="instr" location="${basedir}/instr" />
	<property name="emma" value="${basedir}/libs/emma" />
	<property name="bin" value="${basedir}/bin"/>

	<path id="compile.classpath">
		<fileset dir="${libs}" includes="*.jar"/>
		<pathelement location="${build}"/>
	</path>
	
	<path id="build.classpath">  
		<fileset dir="${libs}" includes="*.jar"/>
		<pathelement path="${build}"/>
	</path>
	
	<path id="instr.classpath">  
		<pathelement path="${build}"/>
	</path>
	
	<path id="emmalib" >
		<fileset dir="${emma}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<taskdef resource="emma_ant.properties" classpathref="emmalib" />
 
	<path id="run.classpath">
		<path  refid="build.classpath"/>
		<pathelement path="${basedir}/libs/junit/junit-4.10.jar"/>
	</path>
 
	<target name="with.emma">
		<mkdir dir="${coverage}" />
	<property name="emma.enabled" value="true"/>
		<taskdef resource="emma_ant.properties" />
		<property name="out.instr.dir" value="${instr}" />
		<path id="run.classpath">
			<pathelement location="${out.instr.dir}" />
			<path  refid="build.classpath"/>
			<pathelement path="${basedir}/libs/junit/junit-4.10.jar"/>
			<pathelement path="${basedir}/libs/emma/emma.jar"/>
		</path>
	</target>
	
	<target name="report.html" >
	<taskdef resource="emma_ant.properties" />
		<emma>
		<report sourcepath="${origsrc}" >
			<fileset dir="${coverage}" >
				<include name="*.emma" />
			</fileset>
			<html outfile="${coverage}/coverage.html" />
		</report>
		</emma>
	</target>
	
	<target name="code" >
			<mkdir dir="${build}" />
			<javac target="1.6" debug="true" destdir="${build}" includeantruntime="false">
				<src path="${src}"/>
				<classpath refid="run.classpath"/>
			</javac>
	</target>
	
	<target name="compile">
		<mkdir dir="${build}" />
 		<javac target="1.6" debug="true" destdir="${build}" includeantruntime="false">
 			<src path="${core}"/>
 			<src path="${external}"/>
 			<classpath refid="compile.classpath"/>
 		</javac>
	</target>

	<!-- Instrument the code -->
	<target name="instr" depends="compile,code" if="emma.enabled" >
	<emma>
	<instr instrpathref="instr.classpath"
		destdir="${out.instr.dir}"
		metadatafile="${coverage}/metadata.emma"
		merge="true">
		<!-- <filter includes="*Test*" /> -->
		<filter excludes="*Test*"/>
	</instr>
	</emma>
	</target>
 
	<!-- runs the tests -->
	<target name="test" depends="instr" description="runs the examples" >
		<mkdir dir="${reports}" />
		<junit printsummary="yes" fork="yes" haltonfailure="no" >
			<classpath> 
				<path  refid="run.classpath"/>
			</classpath>
			<jvmarg value="-Demma.coverage.out.file=${coverage}/coverage.emma" />
			<jvmarg value="-Demma.coverage.out.merge=true" />
			<formatter type="plain"/>
			<formatter type="xml" />
			<batchtest todir="${reports}">
			<fileset dir="${src}" >
				<include name="**/*Test.java" />
			</fileset>
			</batchtest>
		</junit>
	</target>
 
	<target name="clean">
	<delete dir="${build}"/>
	<delete dir="${bin}"/>
	<delete dir="${instr}"/>
	<delete dir="${reports}"/>
	</target>
</project>
